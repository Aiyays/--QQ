仿QQ聊天程序开发文档
一 客户端
	1.登录界面 
		[1]限制账号只能输入数字，密码为暗码--已完成   
		[2]记住密码的功能--
		[3]将获取到的账号和密码发给服务器，判断是否成功登录，成功登录则进入好友界面 未成功登录则提示 并停在登录界面
		
	2.好友界面
		[1]框架 --- 有头像 昵称 ID号 好友栏 状态 添加好友 群组 修改备注 设置 
		[2]点击头像可以更换头像
			添加好友--->搜索  然后强制添加，当添加以后  双方都有该人，如果想要改变
		[3]可以修改状态栏，也可以根据状态栏看到好友是否在线
		[4]点击好友可以与好友建立起对话界面，可以互相发送消息,查看聊天记录
		[5]可以建立群组 ，可以在群里 看到同群的好友
		[6]设置栏可以更改 昵称 年龄 等等
	
		
		
二 服务端
	1.服务器
		[1].写成一个Windows服务
		[2].有发送和接受的功能
		[3].连接数据库,并且调用，判断账户和密码,将聊天信息存储到数据库 ，可以删除和查看
		[4].当登录成功后在数据库中记录当前账户名和端口信息
		[5].根据不同的标识来处理接受到的消息判断登录还是发送给其他人
		[6].同步发送给其他人
		
		
		
三 建立在服务端的数据库----库名--->Graduationdesign
	1.表一 注册表  表名-->information 
		[1]id int not null  Primary key
		[2]Name char(20) not null
		[3]passworld	char(20) not null 
		[4]Registration datetime not null
	
	
	2.表二 端口表->发信息时取端口号 表名-->port------------》直接建立了一个Socket集合  完美的解决了此问题 不需要麻烦的存删数据库
		[1]id int not null Primary key
		[2]port char(12) not null 
		[3]time datetime not null

	3.表三 好友表 ->该人员的好友列表 表名--friend
		[0]id int not null primary
		[1]UserId int not null 
		[2]FriendID int not null 

	4.表四 聊天记录表	表名-->record
		[0]id int not null primary key
		[1]UserID int not null 
		[2]FriendID int not null 
		[3]chatrecord char not null 
		[4]time detatime not null
	5.表五 记住密码----RemenberPd
		[o]nub int not null  Primary Key
		[1]Userid int not null 
		[2]ConputerName char not null
		//label1.Text=System.Net.Dns.GetHostName()  本机名 
		
Winform界面   
	客户端
		登录界面  好友界面 换头像界面 设置界面 修改备注界面 添加好友界面  
		安装服务的步骤---->cd C:\Windows\Microsoft.NET\Framework\v4.0.30319   InstallUtil.exe   sc delete WinServiceTest
		
服务端与客户端通信协议
	客户端发送给服务端	
		string[5]-->5层	传送格式
			string[0]--->接受到的消息的类型“L”-->登录消息       接受到的消息的类型“M”-->发送的消息         		接受到的消息的类型“R”--->注册的信息		接受到消息的类型"A"--->添加好友				接受到消息的类型"D"--->删除好友				接受到消息的状态"S"--->改变自己QQ的状态
			string[1]--->若string[0]="L"	  -->登录的账号   	若string[0]=“M”      --->要发送的账号  	   		若string[0]=“R”		 --->注册的账号		若string[0]="A"	   --->请求添加好友的账号	若string[0]="D"	   --->请求删除好友的账号	若string[0]="D"	   --->改变的状态的选择 1=在线 2离开 3隐身 4 忙碌
			string[2]--->若String[0]="L"      -->登录的密码 	若string[0]=“M”      --->发送消息的对象的账号 	若string[0]=“R”		 --->注册的昵称		若string[0]="A"	   --->被添加好友的账号		若string[0]="D"	   --->被删除好友的账号
			string[3]--->若string[0]="L"      -->是否记住密码 	若string[0]=“M”      --->要发送的消息 		 	若string[0]=“R”		 --->注册的密码		若string[0]="A"	   --->被添加的好友的分组	
			string[4]--->若string[0]="L”      -->记住的主机号										     		若string[0]=“R”		 --->注册的时间		
	服务端发送给客户端
		string[3]-->3层传送格式
			string[0]--->接受类型 "L"        -->登录反馈   									接受类型"M"    -->有好友发送过来的消息
			string[1]--->若string[0]="L"     -->反馈登录信息“true”or"false" 				若string[0]=“M”-->发送消息的账号
		--> string[2]--->若string[1]="true"  -->返回登录的人信息和其好友的json				若string[0]=“M”-->账号和发送过来的消息
		|		
		|	
		->string[2]=json ---》 一个List<string[]>  第0个存的string[]{所有组的组名} string[1]{自己的账号,自己的昵称,自己的签名} ---> 从下标为二开始存好友的string[]{组名,账号,昵称,签名}
		
		
		
然后统一转换成Json格式 发送
		
		frm.ShowDialog();
		//如果没有其它操作也可以写作(new Form2()).ShowDialog();--->主界面显示在前
		
		if(checkbox.checked==true)---->则 记住密码
		
				
1. 在ASP.NET中专用属性： 
      　　获取服务器电脑名：Page.Server.ManchineName 
      　　获取用户信息：Page.User 
      　　获取客户端电脑名：Page.Request.UserHostName 
      　　获取客户端电脑IP：Page.Request.UserHostAddress 
2. 在网络编程中的通用方法： 
      　　获取当前电脑名：static System.Net.Dns.GetHostName() 搜索
      　　根据电脑名取出全部IP地址：static System.Net.Dns.Resolve(电脑名).AddressList 
      　　也可根据IP地址取出电脑名：static System.Net.Dns.Resolve(IP地址).HostName 
      　　3. 系统环境类的通用属性： 
      　　当前电脑名：static System.Environment.MachineName 
      　　当前电脑所属网域：static System.Environment.UserDomainName 
      　　当前电脑用户：static System.Environment.UserNames
	 
新问题  当接受到好友的消息时 好友头像闪烁，如何在点击时  头像停止闪烁 并上传接受到的消息  ，在点击之前 接受到的消息存在哪里 
	解决方案-->
		方案一:在客户端本地建立一个数据库，然后字段为临时发送消息昵称，消息账号 和发送的消息  当接收到消息的时候直接将数据写进数据库，调用后直接删除
		方案二：也是我采用的，在项目内建立一个TXT文档，当接收到消息时，提取数据中的账号，实现闪烁，然后直接将接收的整个Json数据写进TXT文档，当点击闪烁图标时，搜索文档，然后提取出存进去的消息，并显示和删除文档内的改数据
			采用方案二的原因，  因为 方案一  我需要在客户端本地建立一个MySQL数据库，和我需要用到的表，但是不一定本地有MySQL工具
		
新问题  第一次接受到消息以后点开后 第二次在接受到消息，如何判断窗口是否已经点开 ，如果点开如何把消息传到对应的窗口并显示  如果未点开则执行上述操作
	解决方案-->在主界面创建一个聊天界面池  当打开一个聊天界面的时候就 ，就将这个界面对象和一个唯一标识加入池中，然后当每次接受到消息的时候，就判断，池中是否有
				该唯一标识，如果没有就新建，如果有就返回该标识，然后将消息传入显示到该对象
	 
添加好友---》服务器  
	1，先判断接受到的号码 是否已经是用户的好友 
	2，如果不是 再判断数据库中是否存在接受到的号码用户 
	3  如果存在则添加成功 ，并判断是否另一位 用户是否在线

	 ["L","true","YCF-YourName"]
	  
	["L","True","[[\"张\",\"王\",\"李\",\"赵\",\"孙\"],[\"123456\",\"王舒婷\",\"对未来的憧憬从未停歇\"],[\"张\",\"39821\",\"张熙贤\",\"强无敌\"],[\"张\",\"75321\",\"张熙贤\",\"强无敌\"],[\"李\",\"32451\",\"张熙贤\",\"强无敌\"],[\"赵\",\"32132\",\"张熙贤\",\"强无敌\"],[\"张\",\"31221\",\"张熙贤\",\"强无敌\"]]"]----初始化界面
	
	
	["L","True","[[\"1\"],[\"123456\",\"1\",\"1\"],[\"1\",\"39821\",\"1\",\"1\"],[\"1\",\"75321\",\"1\",\"1\"],[\"1\",\"32451\",\"1\",\"1\"],[\"1\",\"32132\",\"1\",\"1\"],[\"1\",\"31221\",\"1\",\"1\"]]"]
	
	["L","True","[[\"1\"],[\"1234312356\",\"1\",\"1\"],[\"张\",\"39821231\",\"1\",\"1\"],[\"1\",\"753231231\",\"1\",\"1\"],[\"1\",\"32451\",\"1\",\"1\"],[\"1\",\"32131232\",\"1\",\"1\"],[\"1\",\"31243621\",\"1\",\"1\"]]"]
	
	
	["M","32451","[\"张熙贤\",\"顿饭克里斯多夫\"]"]----》接收到消息的案列
	

			MyNub.Text = myinformation[0];
            MyName.Text = myinformation[1];
            MyAutograph.Text = myinformation[3];